pipeline {
    agent any
    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        skipDefaultCheckout()
        ansiColor('xterm')
    }
    parameters {
        string(name: 'VERSION', defaultValue: 'master')
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
                sh 'git checkout $VERSION'
            }
        }
        stage('Build') {
            agent {
                docker {
                    image 'maven:3.9.6-eclipse-temurin-17-alpine'
                    reuseNode true
                }
            }
            steps {
                sh 'mvn clean install'
            }
        }
        stage('Deploy') {
            environment {
                CLIENT = '/var/destrostudios/apps/Ethercards'
            }
            steps {
                // Server
                sh 'mv game-server/target docker'
                dir ('docker') {
                    sh 'docker compose build --no-cache'
                    sh 'docker compose up -d'
                }

                // Client
                sh 'rm -rf "$CLIENT"'
                sh 'mkdir "$CLIENT"'
                sh 'mv gui/target/assets "$CLIENT"'
                sh 'mv gui/target/libs "$CLIENT"'
                sh 'mv gui/target/gui-0.1.0.jar "$CLIENT/a.jar"'
                sh 'curl -X POST https://destrostudios.com:8080/apps/5/updateFiles'
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}